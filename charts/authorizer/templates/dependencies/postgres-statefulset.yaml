{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "authorizer.fullname" . }}-postgresql
  namespace: {{ include "authorizer.namespace" . }}
spec:
  serviceName: {{ include "authorizer.fullname" . }}-postgresql
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "authorizer.fullname" . }}-postgresql
  template:
    metadata:
      labels:
        app: {{ include "authorizer.fullname" . }}-postgresql
    spec:
      containers:
        - name: postgres
          image: {{ .Values.postgresql.image }}
          ports:
          - containerPort: 5432
          env:
          - name: POSTGRES_USER
            value: {{ .Values.postgresql.postgresqlUsername | quote }}
          - name: POSTGRES_PASSWORD
            value: {{ .Values.postgresql.postgresqlPassword | quote }}
          - name: POSTGRES_DB
            value: {{ .Values.postgresql.postgresqlDatabase | quote }}
          resources:
            {{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
          - name: postgres-data
            mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      storageClassName: {{ .Values.postgresql.persistence.storageClassName | quote }}
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.postgresql.persistence.size | quote }}
{{- end }}