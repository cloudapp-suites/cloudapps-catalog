{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ printf "%s-postgresql" .Release.Name }}
  labels:
    {{- include "evershop.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  serviceName: {{ printf "%s-postgresql" .Release.Name }}
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgresql
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: postgresql
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
          ports:
            - name: postgres
              containerPort: {{ .Values.postgresql.port }}
              protocol: TCP
          env:
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.user | quote }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgresql.password | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.db | quote }}
          resources:
            {{ toYaml .Values.postgresql.resources | indent 12 }}
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: {{ printf "%s-postgresql" .Release.Name }}
{{- end }}