apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "it-tools.fullname" . }}
  labels:
    {{- include "it-tools.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "it-tools.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "it-tools.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "it-tools.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            periodSeconds: 30
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: http
            periodSeconds: 30
            timeoutSeconds: 30
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: cache
              mountPath: "{{ .Values.nginxConf.cachePath }}"
            - name: tmp
              mountPath: "/tmp/nginx"
            - name: conf 
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
        {{- if .Values.metrics.enabled }}
        - name: {{ .Values.metrics.containerName }}
          securityContext:
            {{- toYaml .Values.metrics.securityContext | nindent 12 }}
          image: "{{ .Values.metrics.image.repository }}:{{ .Values.metrics.image.tag }}"
          imagePullPolicy: {{ .Values.metrics.image.pullPolicy }}
          args: {{- toYaml .Values.metrics.args | nindent 12 }}
          ports:
            - name: {{ .Values.metrics.portName }}
              containerPort: {{ .Values.metrics.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: {{ .Values.metrics.port }}
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /metrics
              port: {{ .Values.metrics.port }}
            initialDelaySeconds: 3
            periodSeconds: 3
            timeoutSeconds: 2
            failureThreshold: 3
          resources: {{- toYaml .Values.metrics.resources | nindent 12 }}
        {{- end }}
        {{- if .Values.extraContainers }}
        {{- toYaml .Values.extraContainers | nindent 8 }}
        {{- end }}
      volumes:
        - name: cache
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: conf
          configMap:
            name: {{ default "nginx-conf" .Values.nginxConf.existingConfigmap }}
        {{- if .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
