{{- if eq .Values.service.type "LoadBalancer" }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ include "cusdis.fullname" . }}-clb-ip-setup"
  labels:
    {{- include "cusdis.labels" . | nindent 4 }}
  annotations:
    # "post-install" 表示在 Helm 安装完成后运行
    "helm.sh/hook": post-install
    # "hook-succeeded" 表示如果 Job 成功，Helm release 更新后就删除这个 Job
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "cusdis.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      # 关键：使用我们创建的带有权限的 ServiceAccount
      serviceAccountName: "{{ include "cusdis.fullname" . }}-ip-updater"
      containers:
      - name: clb-ip-setup
        image: {{ .Values.image.kubectl }} # 推荐使用维护良好的官方或 bitnami 镜像
        command:
        - /bin/bash
        - -c
        - |
          set -e # 如果任何命令失败，立即退出
          echo "Waiting for LoadBalancer to get external IP for service {{ include "cusdis.fullname" . }}..."
          EXTERNAL_IP=""
          # 增加超时机制，比如等待 5 分钟 (30 * 10s)
          for i in $(seq 1 30); do
            # 使用 --namespace 明确指定命名空间，增加脚本的健壮性
            EXTERNAL_IP=$(kubectl get svc {{ include "cusdis.fullname" . }} --namespace {{ .Release.Namespace }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}' 2>/dev/null || true)
            if [ -n "$EXTERNAL_IP" ]; then
              echo "Successfully found external IP: $EXTERNAL_IP"
              break
            fi
            echo "Still waiting for external IP... (Attempt $i/30)"
            sleep 10
          done

          if [ -z "$EXTERNAL_IP" ]; then
            echo "Error: Timed out waiting for external IP after 5 minutes."
            exit 1
          fi

          echo "Patching deployment {{ include "cusdis.fullname" . }} with NEXTAUTH_URL=http://$EXTERNAL_IP"
          # 使用 --type=strategic 和更清晰的 patch 语法
          kubectl patch deployment {{ include "cusdis.fullname" . }} --namespace {{ .Release.Namespace }} \
            --type='strategic' \
            -p='{"spec":{"template":{"spec":{"containers":[{"name":"{{ include "cusdis.name" . }}","env":[{"name":"NEXTAUTH_URL","value":"http://'$EXTERNAL_IP':{{ .Values.service.port}}"}]}]}}}}'
          echo "Patch successful. Deployment will be updated with the new environment variable."
      restartPolicy: Never
  backoffLimit: 3 # 减少重试次数
{{- end }}
