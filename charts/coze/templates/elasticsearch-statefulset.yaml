{{- if .Values.elasticsearch.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "opencoze.fullname" . }}-elasticsearch
  labels:
    {{- include "opencoze.labels" . | nindent 4 }}
spec:
  serviceName: {{ .Release.Name }}-elasticsearch
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: elasticsearch
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/name: {{ include "opencoze.name" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: elasticsearch
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: {{ include "opencoze.name" . }}
    spec:
      initContainers:
      - name: install-plugins
        image: "{{ .Values.elasticsearch.image.repository }}:{{ .Values.elasticsearch.image.tag }}"
        securityContext:
          runAsUser: 0  # 初始化容器仍需要 root 权限来安装插件
        command:
        - /bin/bash
        - -c
        - |
          set -ex
          echo 'Installing smartcn plugin...';
          # 使用正确的 elasticsearch-plugin 路径
          ES_PLUGIN_CMD="/usr/share/elasticsearch/bin/elasticsearch-plugin"
          
          # 安装 smartcn 插件
          if [ ! -d /usr/share/elasticsearch/plugins/analysis-smartcn ]; then
            $ES_PLUGIN_CMD install analysis-smartcn
          fi
        volumeMounts:
        - name: es-plugins
          mountPath: /usr/share/elasticsearch/plugins
      - name: set-permissions
        image: "{{ .Values.elasticsearch.image.repository }}:{{ .Values.elasticsearch.image.tag }}"
        securityContext:
          runAsUser: 0  # 需要 root 权限来设置权限
        command:
        - /bin/bash
        - -c
        - |
          set -ex
          echo 'Setting permissions for Elasticsearch data directory...';
          chown -R 1000:1000 /usr/share/elasticsearch/data
          chmod -R 755 /usr/share/elasticsearch/data
        volumeMounts:
        - name: es-data
          mountPath: /usr/share/elasticsearch/data
      containers:
        - name: elasticsearch
          securityContext:
            runAsUser: 1000  # 使用非 root 用户运行
          image: "{{ .Values.elasticsearch.image.repository }}:{{ .Values.elasticsearch.image.tag }}"
          env:
            - name: ES_JAVA_OPTS
              value: {{ .Values.elasticsearch.javaOpts | quote }}
            - name: ELASTIC_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-es-secret
                  key: username
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-es-secret
                  key: password
            - name: discovery.type
              value: "single-node"
            - name: xpack.security.enabled
              value: "false"
          command:
            - /bin/bash
            - -c
            - |
              # 使用正确的路径启动 Elasticsearch
              cd /usr/share/elasticsearch
              exec ./bin/elasticsearch
          ports:
            - containerPort: {{ .Values.elasticsearch.service.port }}
          resources:
            {{ toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: es-data
              mountPath: /usr/share/elasticsearch/data
            - name: es-plugins
              mountPath: /usr/share/elasticsearch/plugins
      volumes:
      - name: es-plugins
        emptyDir: {}
      - name: es-config
        configMap:
          name: {{ include "opencoze.fullname" . }}-es-init-config
  volumeClaimTemplates:
  - metadata:
      name: es-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
    {{- if .Values.elasticsearch.persistence.storageClassName }}
      storageClassName: {{ .Values.elasticsearch.persistence.storageClassName | quote }}
    {{- end }}
      resources:
        requests:
          storage: {{ .Values.elasticsearch.persistence.size | quote }}
{{- end }}